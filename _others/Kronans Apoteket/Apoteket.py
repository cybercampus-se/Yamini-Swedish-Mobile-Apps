import jwt
from datetime import datetime

# Replace with your actual JWT
JWT_TOKEN = "eyJ0eXBlIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJpYXQiOjE3NDE1MzU1NzMsImV4cCI6MTc0MTUzNzk3Mywic3ViIjoiMTk5OTA3MjYzMjIzIiwiYXVkIjpbImtyb25hbnNhcG90ZWsiXSwiaXNzIjoid3d3Lmtyb25hbnNhcG90ZWsuc2UiLCJmaXJzdE5hbWUiOiJZYW1pbmkiLCJsYXN0TmFtZSI6IkJhbGFubmFnYXJpIiwiaWRlbnRpdHlOdW1iZXIiOiIxOTk5MDcyNjMyMjMiLCJzZXNzaW9uSWQiOiI4NjhiMTgwNC05MzkyLTQ4NmMtODhiOS1lN2IxNWE3M2NlMTgiLCJ0b2tlbiI6ImV5SmxibU1pT2lKQk1USTRSME5OSWl3aVlXeG5Jam9pVWxOQkxVOUJSVkF0TlRFeUluMC5GS1Q5TDdOY2ZOZTlVMzJFMkN6OWZLNXJMWGJYMzFRT3ZucmpwQjB0Q3RQQXdDY3YyUjZrWkFValYyM1dmOVBJY1VkakNyMU5QTTFnd0NUTHRMZUFEbm9TVVNXMERQWHZLMnRZT1c0MHFVZ3YtQ0FWMFBHN0lPZXl1Y0p2U3E3dEljTi1MLUZkUDZxQV96eFAxcjg1VG1ick1NaTNwV1VkaXR1d25peEhhV0VPMy1kT2x1VGRzZmpObWdFNmVnY21sejFaLXQyQ1FNaDJMV0R2dGJTYXpqSFlUaVl6OHFVYkFSNzU2VTlBTVkxQUxXWVAwU0d6SXM4MnhLOUM5M0VwdUdSMTh0dGJnQ2MwUlJnb0pRakJrSDdWNnU5T0JSVW45Y1dmNGNCZ0JjSl9yV1pVYUtPZjJJRXI3Z3VTUm81dFRIV2MwVF9Bc2JfVUllZnRmQ1M1V2cuTjYzNm1wRWxRSUV5bEloOS40Q2VudHJCNU1xQnRSWXEwSlp6eE5kVExnU043eDk4TkhTT3BOWThvak9UR1FLTEEwMWpSUkJQRkNrb0hta1lVdUNSaHBOZEwyZ1lUMXFrUTR0TFVZY2FpbXU5c2ExMXBmVzMtb2NTb0FzZUJFTzZTOU92NkpKeWdLbHRtQ3hQckZrTWtEQUVRT044OGRsNkV4aTR3enY5WG14bzRSWVd1dDFpbGVmWTFSTFdIQk1kVk1yRWl1cHFXVjNmUGxsWEVhcE5rQ0JOSG9SV0F1RzJrRDJCRG1JcUhoQ2FQLVpTZjd2TVFsZVNWZ3d0UmVicDdlVnRMd3Y1QmVodlJ5eFlPV2tRaHNtSlROdHpjQ0RLRGUxUk00RDJHX24xMlhINmg3elV3ZlMxSy13Yy1zdmF4Y2RsWXJjWDh0b2tNS1E0S3dxdGd2Q0NPbGpwR2p3cDlMYTdkV0pDYUtCMGdHQUt5OFNranVocXlPR1VPU0c1ZmZKNE4xVHFiNTlYZlFTelRvT3JOaU1Cc05vZXV4akVSOHk4eExnR3NncjQ5TFBqXzAyeExSdG12aU1teTNhT3EyYkx3UHlEN2YzbF9nUENJeXBLRVhBb1E3dFFld25LWkkySkFMM3NwNkRURlk2LUN3LU9JUWJlTGFNNjhmRkUwMF85LUxiTkdvOWxHRlJ0MmxxYXczbzV1MEQ0NnBYY2FWbUZyeDNoZ2tQelNDQWp3dk50aUo2NTcyZVJpc2JxSHVCckQwOUZyV2ozbDB2OWt5M05zNF9oSk5SWDF1eEdHMTFTZlVYSkdPaVFtVFNIb2R0d0JDWVI4b3NyV1RDT0JzWkFGT2JmOFZLSmJJUWxNWkVwZVpOekMzdC1GNnhmeEdKN19ya2FxX0RoMFdTWnk1Njk4aVZUUnI5LUVDc2phMFFxN0FPV0s5d3hXbmN0MS15UTduMjZ2dTNNVjMzZmMtUkp1QlcyRU5KZjJ5Ull1dTJRVVhWXzhwLXlTVlVnTm15ci14QmdsRVV2U3VLYS1QOEJoZ0xxVGx3bzZsNk51TmVMMTYwWmhfejRyU0ItX0xGOGF3TGFsRGN3M29DXzl6WkRCYVFUT3FKMzk0REd4LXA4WXdLRjU2Vkd5cDljMEQ1MGk0WWZqOWJTN2hKamQxOXZJRDFVbDQ1QUxPQzY4dzVtVC1sUkwyZFVMam9iMVlkSlljSXMtWlFSb2NtNXVxa2hteERZcWV6a1pqOWtFbklPOWEwR2RFaHg1cVVhbUtBOFR3VXpsazJpSjU3MzNPdGk4aEdISVNNSkplb3RuTVNhaEpPcS1mUW8tcldQRno2Q0s3ZGdRY2htQkE1WGd4WUxVYzJYamM3VUk0Mlo2TVVrS1VFdlNuTzZoM29LNkhMNzdNNDJsTHBibnFkQVU0QU9iZUNhN1Z4Qld5N3hGRHpKOVdLR1QwaUZIVElCMDdIeEFJZTdsTGhGUmNaaTk0V1kzSGdpa1VxVmp1aktYNmUybXg2MHhEQmtEZktIeTJEUTIzQWs5SkxpNmQzV2NrQ25JRzVPTEdHQ21LRUFGOHNFUjFXVkpyXzVWRGdDcm40dDVNeXl6WkU2cUZld0I2V2g2NnZKUUZ1SzF2ZHRZUHViR1RyS3hlRUFnNmFKeUFjUExfMnJhSzY4VWRWMTRPVHdNTmQwZnpUOFU0YVg4NWFZRDNBYnZwWHZLOFd1S0p4aHdsUm9oSjdNNEExWm45TnBtQVhmeUstRDd3U3pEVEhrcGVBTFc3aDFPZWs5cUFMdElJTDhYUjVEdmFBb3dIVG01UDdjVzdaY0tpUjM1VWVhYXNMSkNySmJTdHNPdGlGY3NXQWkyTkxQaWk3VGlrdGNqRFVJU21SVGt0eHZfRWs5S1Q1NFhVVHZwampjdERwM2ozZDl1MUNDNjcxUGVLa1JGTFNZaTB6d1JiQWtqQ1BtQ1VuV1g0ajlQaE1XWFlMZ0ZidjhwNzFoUkJJczdMcUt4ekxXTkR1ZlVoRTl2aDNxYmExMmNkT21McGxORDROVXA5WHVVdlpkcFpKY3EtTTZRc0NPODl5aUszTzZjLVE0QjItWmlFc0pyWGFDczFXc1d3WE5tbVF2ZlFsNTF0Yk9WSDdFMU5KdWtwTTV2RmttbjVOeFpxb0p3dGlqNXpqTWVxR2pGSGRQMlpYTm9MUVMzWGhubXNhNjBsb3E3RHk3MkpVcGthdnhHcGtfLXpGRkcyNEZ0QzF0OWxHclVfSWxNVXk2YVBGQUlWU19rTzUySVVQTVUybVFpc0ExY1ZNekVxOWNSeVRybk00dXYxdWlsanBSZmlhUzk5a3ZtNFVfSkNjdTFsbVpacG1QWk1iODFHUlZkLUhSZVJxYUUwWlBmNC1nMEM4T1Y2NGJOV05QTEc2TWlUcEd1QmRocXRBLncxQXRENkRMeld5WldDVUcwVF9FVVEifQ.mnEKhG-VeFbr1FYhRZvGmFJyCx1WhPQpcmpxzLHBfSkoflsyNojuDT6aHQfCEmA44vhdxuCuXqkYGK0JlmaBATIvqgHVRYxbXxlu2viydIOEH3jRxqUjPSpJfmwu7w6SiI63kTu2mS4pxCZNLqOGncxxFYRYCwRKSYv5IwPnQWZPfVvXohayFH_zFnYoy4jmhMe0hCYB-JbV0RZoYP5mFKNCqPdV3PSDXq8XovrvGhKVePYMaZ10IZIq2DesJazl4rR0pwanq9768cBQu3GJsxuB50Qwr4wgDI9_dmz63zBpklT-n7cEYlEmyAVlSCNofo8Jiv0jDFoanrqaAYp8zw"

def inspect_jwt(token):
    try:
        # Decode the JWT without verifying the signature
        decoded = jwt.decode(token, options={"verify_signature": False})
        print("✅ Decoded JWT payload:")
        print(decoded)

        # Check if the token has expired
        if "exp" in decoded:
            expiration_time = datetime.utcfromtimestamp(decoded["exp"])
            current_time = datetime.utcnow()
            if current_time > expiration_time:
                print("❌ Token has expired.")
            else:
                print("✅ Token is still valid (not expired).")
        else:
            print("⚠️ No expiration time found in the token.")

    except jwt.DecodeError:
        print("❌ Failed to decode the token. It may be malformed.")
    except Exception as e:
        print(f"❌ An error occurred: {e}")

# Inspect the JWT
inspect_jwt(JWT_TOKEN)


The output for this is:
✅ Decoded JWT payload:
{'iat': 1741535573, 'exp': 1741537973, 'sub': '199907263223', 'aud': ['kronansapotek'], 'iss': 'www.kronansapotek.se', 'firstName': 'Yamini', 'lastName': 'Balannagari', 'identityNumber': '199907263223', 'sessionId': '868b1804-9392-486c-88b9-e7b15a73ce18', 'token': 'eyJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtNTEyIn0.FKT9L7NcfNe9U32E2Cz9fK5rLXbX31QOvnrjpB0tCtPAwCcv2R6kZAUjV23Wf9PIcUdjCr1NPM1gwCTLtLeADnoSUSW0DPXvK2tYOW40qUgv-CAV0PG7IOeyucJvSq7tIcN-L-FdP6qA_zxP1r85TmbrMMi3pWUdituwnixHaWEO3-dOluTdsfjNmgE6egcmlz1Z-t2CQMh2LWDvtbSazjHYTiYz8qUbAR756U9AMY1ALWYP0SGzIs82xK9C93EpuGR18ttbgCc0RRgoJQjBkH7V6u9OBRUn9cWf4cBgBcJ_rWZUaKOf2IEr7guSRo5tTHWc0T_Asb_UIeftfCS5Wg.N636mpElQIEylIh9.4CentrB5MqBtRYq0JZzxNdTLgSN7x98NHSOpNY8ojOTGQKLA01jRRBPFCkoHmkYUuCRhpNdL2gYT1qkQ4tLUYcaimu9sa11pfW3-ocSoAseBEO6S9Ov6JJygKltmCxPrFkMkDAEQON88dl6Exi4wzv9Xmxo4RYWut1ilefY1RLWHBMdVMrEiupqWV3fPllXEapNkCBNHoRWAuG2kD2BDmIqHhCaP-ZSf7vMQleSVgwtRebp7eVtLwv5BehvRyxYOWkQhsmJTNtzcCDKDe1RM4D2G_n12XH6h7zUwfS1K-wc-svaxcdlYrcX8tokMKQ4KwqtgvCCOljpGjwp9La7dWJCaKB0gGAKy8SkjuhqyOGUOSG5ffJ4N1Tqb59XfQSzToOrNiMBsNoeuxjER8y8xLgGsgr49LPj_02xLRtmviMmy3aOq2bLwPyD7f3l_gPCIypKEXAoQ7tQewnKZI2JAL3sp6DTFY6-Cw-OIQbeLaM68fFE00_9-LbNGo9lGFRt2lqaw3o5u0D46pXcaVmFrx3hgkPzSCAjwvNtiJ6572eRisbqHuBrD09FrWj3l0v9ky3Ns4_hJNRX1uxGG11SfUXJGOiQmTSHodtwBCYR8osrWTCOBsZAFObf8VKJbIQlMZEpeZNzC3t-F6xfxGJ7_rkaq_Dh0WSZy5698iVTRr9-ECsja0Qq7AOWK9wxWnct1-yQ7n26vu3MV33fc-RJuBW2ENJf2yRYuu2QUXV_8p-ySVUgNmyr-xBglEUvSuKa-P8BhgLqTlwo6l6NuNeL160Zh_z4rSB-_LF8awLalDcw3oC_9zZDBaQTOqJ394DGx-p8YwKF56VGyp9c0D50i4Yfj9bS7hJjd19vID1Ul45ALOC68w5mT-lRL2dULjob1YdJYcIs-ZQRocm5uqkhmxDYqezkZj9kEnIO9a0GdEhx5qUamKA8TwUzlk2iJ5733Oti8hGHISMJJeotnMSahJOq-fQo-rWPFz6CK7dgQchmBA5XgxYLUc2Xjc7UI42Z6MUkKUEvSnO6h3oK6HL77M42lLpbnqdAU4AObeCa7VxBWy7xFDzJ9WKGT0iFHTIB07HxAIe7lLhFRcZi94WY3HgikUqVjujKX6e2mx60xDBkDfKHy2DQ23Ak9JLi6d3WckCnIG5OLGGCmKEAF8sER1WVJr_5VDgCrn4t5MyyzZE6qFewB6Wh66vJQFuK1vdtYPubGTrKxeEAg6aJyAcPL_2raK68UdV14OTwMNd0fzT8U4aX85aYD3AbvpXvK8WuKJxhwlRohJ7M4A1Zn9NpmAXfyK-D7wSzDTHkpeALW7h1Oek9qALtIIL8XR5DvaAowHTm5P7cW7ZcKiR35UeaasLJCrJbStsOtiFcsWAi2NLPii7TiktcjDUISmRTktxv_Ek9KT54XUTvpjjctDp3j3d9u1CC671PeKkRFLSYi0zwRbAkjCPmCUnWX4j9PhMWXYLgFbv8p71hRBIs7LqKxzLWNDufUhE9vh3qba12cdOmLplND4NUp9XuUvZdpZJcq-M6QsCO89yiK3O6c-Q4B2-ZiEsJrXaCs1WsWwXNmmQvfQl51tbOVH7E1NJukpM5vFkmn5NxZqoJwtij5zjMeqGjFHdP2ZXNoLQS3Xhnmsa60loq7Dy72JUpkavxGpk_-zFFG24FtC1t9lGrU_IlMUy6aPFAIVS_kO52IUPMU2mQisA1cVMzEq9cRyTrnM4uv1uiljpRfiaS99kvm4U_JCcu1lmZZpmPZMb81GRVd-HReRqaE0ZPf4-g0C8OV64bNWNPLG6MiTpGuBdhqtA.w1AtD6DLzWyZWCUG0T_EUQ'}
C:\Users\yamin\OneDrive\Pictures\Documents\MY DOCS\Thesis\Process\Apoteket.py:16: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).
  expiration_time = datetime.utcfromtimestamp(decoded["exp"])
C:\Users\yamin\OneDrive\Pictures\Documents\MY DOCS\Thesis\Process\Apoteket.py:17: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  current_time = datetime.utcnow()
❌ Token has expired.
